{
    "version": "https://jsonfeed.org/version/1",
    "title": "null • All posts by \"c/c++\" category",
    "description": "睡着做梦，醒着圆梦。",
    "home_page_url": "https://www.revincent.com",
    "items": [
        {
            "id": "https://www.revincent.com/HDU3966/",
            "url": "https://www.revincent.com/HDU3966/",
            "title": "HDU3966（树链剖分 + 区间更新 + 点查询）",
            "date_published": "2020-09-21T02:12:54.000Z",
            "content_html": "<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly92anVkZ2UubmV0L3Byb2JsZW0vSERVLTM5NjY=\">题目传送门</span></p>\n<h1 id=\"1-题目大意及思路\"><a class=\"markdownIt-Anchor\" href=\"#1-题目大意及思路\">#</a> 1 题目大意及思路</h1>\n<p>一颗 N 个结点的树，给你 P 次操作</p>\n<p>操作 I ：结点 C1–&gt;C2 之间的所有结点权值加 K；</p>\n<p>操作 D：结点 C1-&gt;C2 之间的所有结点权值减 K；</p>\n<p>操作 Q：询问结点 C 的值。</p>\n<p>思路：这一眼看上去就知道是一道裸的树链剖分 (点操作)，就不多说了直接上代码。没学过树链剖分的建议先入门再来看代码。</p>\n<hr>\n<h1 id=\"2-解题代码\"><a class=\"markdownIt-Anchor\" href=\"#2-解题代码\">#</a> 2 解题代码</h1>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;string.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> N 50005</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">node</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> u,v,next;</span><br><span class=\"line\">&#125; edge[N&lt;&lt;<span class=\"number\">2</span>];</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">int</span> pre[N],cnt;</span><br><span class=\"line\"><span class=\"keyword\">int</span> son[N],dep[N],siz[N];</span><br><span class=\"line\"><span class=\"keyword\">int</span> tid[N],id,top[N],fa[N];</span><br><span class=\"line\"><span class=\"keyword\">int</span> n,m,p;</span><br><span class=\"line\"><span class=\"keyword\">int</span> num[N],add[N&lt;&lt;<span class=\"number\">2</span>];</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">scan</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> res = <span class=\"number\">0</span>, ch, flag = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>((ch = getchar()) == <span class=\"string\">&#x27;-&#x27;</span>)</span><br><span class=\"line\">        flag = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(ch &gt;= <span class=\"string\">&#x27;0&#x27;</span> &amp;&amp; ch &lt;= <span class=\"string\">&#x27;9&#x27;</span>)</span><br><span class=\"line\">        res = ch - <span class=\"string\">&#x27;0&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>((ch = getchar()) &gt;= <span class=\"string\">&#x27;0&#x27;</span> &amp;&amp; ch &lt;= <span class=\"string\">&#x27;9&#x27;</span> )</span><br><span class=\"line\">        res = res * <span class=\"number\">10</span> + ch - <span class=\"string\">&#x27;0&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> flag ? -res : res;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">init</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    cnt = id = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"built_in\">memset</span>(pre, <span class=\"number\">-1</span>, <span class=\"keyword\">sizeof</span>(pre));</span><br><span class=\"line\">    <span class=\"built_in\">memset</span>(siz, <span class=\"number\">0</span>, <span class=\"keyword\">sizeof</span>(siz));</span><br><span class=\"line\">    <span class=\"built_in\">memset</span>(add, <span class=\"number\">0</span>, <span class=\"keyword\">sizeof</span>(add));</span><br><span class=\"line\">    <span class=\"built_in\">memset</span>(son, <span class=\"number\">0</span>, <span class=\"keyword\">sizeof</span>(son));</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">addEdge</span><span class=\"params\">(<span class=\"keyword\">int</span> u, <span class=\"keyword\">int</span> v)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    edge[cnt].u = u;</span><br><span class=\"line\">    edge[cnt].v = v;</span><br><span class=\"line\">    edge[cnt].next = pre[u];</span><br><span class=\"line\">    pre[u] = cnt++;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">dfs1</span><span class=\"params\">(<span class=\"keyword\">int</span> u, <span class=\"keyword\">int</span> f, <span class=\"keyword\">int</span> dp)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    dep[u] = dp;</span><br><span class=\"line\">    fa[u] = f;</span><br><span class=\"line\">    son[u] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    siz[u] = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = pre[u]; ~i; i=edge[i].next)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> v = edge[i].v;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(v != f)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            dfs1(v, u, dp+<span class=\"number\">1</span>);</span><br><span class=\"line\">            siz[u] += siz[v];</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(siz[v] &gt; siz[son[u]])</span><br><span class=\"line\">                son[u] = v;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">dfs2</span><span class=\"params\">(<span class=\"keyword\">int</span> u, <span class=\"keyword\">int</span> tp)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    tid[u] = ++id;</span><br><span class=\"line\">    top[u] = tp;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(son[u])</span><br><span class=\"line\">        dfs2(son[u], tp);</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = pre[u]; ~i; i=edge[i].next)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> v = edge[i].v;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(v != fa[u] &amp;&amp; v != son[u])</span><br><span class=\"line\">            dfs2(v, v);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">update</span><span class=\"params\">(<span class=\"keyword\">int</span> rt, <span class=\"keyword\">int</span> l, <span class=\"keyword\">int</span> r, <span class=\"keyword\">int</span> ql, <span class=\"keyword\">int</span> qr, <span class=\"keyword\">int</span> v)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(ql &lt;= l &amp;&amp; r &lt;= qr)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        add[rt] += v;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> mid = (l + r) &gt;&gt; <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(add[rt])</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        add[rt&lt;&lt;<span class=\"number\">1</span>] += add[rt];</span><br><span class=\"line\">        add[rt&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>] += add[rt];</span><br><span class=\"line\">        add[rt] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(ql &lt;= mid)</span><br><span class=\"line\">        update(rt&lt;&lt;<span class=\"number\">1</span>, l, mid, ql, qr, v);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(qr &gt; mid)</span><br><span class=\"line\">        update(rt&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>, mid+<span class=\"number\">1</span>, r, ql, qr, v);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">query</span><span class=\"params\">(<span class=\"keyword\">int</span> rt, <span class=\"keyword\">int</span> l, <span class=\"keyword\">int</span> r, <span class=\"keyword\">int</span> pos)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(l == r &amp;&amp; l == pos)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> add[rt];</span><br><span class=\"line\">    <span class=\"keyword\">int</span> mid = (l + r) &gt;&gt; <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(add[rt])</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        add[rt&lt;&lt;<span class=\"number\">1</span>] += add[rt];</span><br><span class=\"line\">        add[rt&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>] += add[rt];</span><br><span class=\"line\">        add[rt] = <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(pos &lt;= mid)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> query(rt&lt;&lt;<span class=\"number\">1</span>, l, mid, pos);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> query(rt&lt;&lt;<span class=\"number\">1</span>|<span class=\"number\">1</span>, mid+<span class=\"number\">1</span>, r, pos);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">LCA</span><span class=\"params\">(<span class=\"keyword\">int</span> u, <span class=\"keyword\">int</span> v, <span class=\"keyword\">int</span> k)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(top[u] != top[v])</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(dep[top[u]] &lt; dep[top[v]])</span><br><span class=\"line\">            swap(u, v);</span><br><span class=\"line\">        update(<span class=\"number\">1</span>, <span class=\"number\">1</span>, n, tid[top[u]], tid[u], k);</span><br><span class=\"line\">        u = fa[top[u]];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(dep[u] &gt; dep[v])</span><br><span class=\"line\">        swap(u, v);</span><br><span class=\"line\">    update(<span class=\"number\">1</span>, <span class=\"number\">1</span>, n, tid[u], tid[v], k);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(~<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d%d%d&quot;</span>, &amp;n,&amp;m,&amp;p))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; ++i)</span><br><span class=\"line\">            num[i] = scan();</span><br><span class=\"line\">        init();</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(m--)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> u = scan();</span><br><span class=\"line\">            <span class=\"keyword\">int</span> v = scan();</span><br><span class=\"line\">            addEdge(u, v);</span><br><span class=\"line\">            addEdge(v, u);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        dfs1(<span class=\"number\">1</span>, <span class=\"number\">1</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">        dfs2(<span class=\"number\">1</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">while</span>(p--)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">char</span> op[<span class=\"number\">10</span>];</span><br><span class=\"line\">            <span class=\"keyword\">int</span> c1,c2,k;</span><br><span class=\"line\">            <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%s&quot;</span>, op);</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(op[<span class=\"number\">0</span>] == <span class=\"string\">&#x27;I&#x27;</span>)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d%d%d&quot;</span>, &amp;c1,&amp;c2,&amp;k);</span><br><span class=\"line\">                LCA(c1, c2, k);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(op[<span class=\"number\">0</span>] == <span class=\"string\">&#x27;D&#x27;</span>)</span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d%d%d&quot;</span>, &amp;c1,&amp;c2,&amp;k);</span><br><span class=\"line\">                LCA(c1, c2, -k);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">            &#123;</span><br><span class=\"line\">                <span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>, &amp;c1);</span><br><span class=\"line\">                <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d\\n&quot;</span>, num[c1] + query(<span class=\"number\">1</span>, <span class=\"number\">1</span>, n, tid[c1]));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n",
            "tags": []
        }
    ]
}