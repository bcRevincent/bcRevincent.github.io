{
    "version": "https://jsonfeed.org/version/1",
    "title": "null • All posts by \"acm\" tag",
    "description": "睡着做梦，醒着圆梦。",
    "home_page_url": "https://www.revincent.com",
    "items": [
        {
            "id": "https://www.revincent.com/BZOJ1941/",
            "url": "https://www.revincent.com/BZOJ1941/",
            "title": "BZOJ1941 Hide and Seek(kd_Tree模板题)",
            "date_published": "2020-09-21T03:41:01.000Z",
            "content_html": "<p><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5seWRzeS5jb20vSnVkZ2VPbmxpbmUvcHJvYmxlbS5waHA/aWQ9MTk0MQ==\">题目传送门：bzoj 1941</span></p>\n<h1 id=\"1-题目\"><a class=\"markdownIt-Anchor\" href=\"#1-题目\">#</a> 1. 题目</h1>\n<p>题意：求每个点到其中任意一个点的最大值和最小值的差的最小值。</p>\n<p>注意：最小值初始化不能设为 0，因为不能是同一个点。</p>\n<hr>\n<h1 id=\"2-解题代码\"><a class=\"markdownIt-Anchor\" href=\"#2-解题代码\">#</a> 2. 解题代码</h1>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**************************************************************</span></span><br><span class=\"line\"><span class=\"comment\">    Problem: 1941</span></span><br><span class=\"line\"><span class=\"comment\">    User: Revincent</span></span><br><span class=\"line\"><span class=\"comment\">    Language: C++</span></span><br><span class=\"line\"><span class=\"comment\">    Result: Accepted</span></span><br><span class=\"line\"><span class=\"comment\">    Time:1644 ms</span></span><br><span class=\"line\"><span class=\"comment\">    Memory:16452 kb</span></span><br><span class=\"line\"><span class=\"comment\">****************************************************************/</span></span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;string.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;algorithm&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> N 500005</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> inf 0x3f3f3f3f</span></span><br><span class=\"line\"><span class=\"keyword\">using</span> <span class=\"keyword\">namespace</span> <span class=\"built_in\">std</span>;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"keyword\">int</span> n,root,d;</span><br><span class=\"line\"><span class=\"keyword\">int</span> Min,Max,X,Y;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">node</span></span></span><br><span class=\"line\"><span class=\"class\">&#123;</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> l,r,xy[<span class=\"number\">2</span>],Max[<span class=\"number\">2</span>],Min[<span class=\"number\">2</span>];</span><br><span class=\"line\">    <span class=\"keyword\">friend</span> <span class=\"keyword\">bool</span> <span class=\"keyword\">operator</span> &lt; (node a, node b)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(a.xy[d] == b.xy[d])</span><br><span class=\"line\">             <span class=\"keyword\">return</span> a.xy[d^<span class=\"number\">1</span>] &lt; b.xy[d^<span class=\"number\">1</span>];</span><br><span class=\"line\">        <span class=\"keyword\">return</span> a.xy[d] &lt; b.xy[d];</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;p[N];</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">scan</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> v = <span class=\"number\">0</span>,f = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">char</span> c;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>((c=getchar())==<span class=\"string\">&#x27; &#x27;</span> || c == <span class=\"string\">&#x27;\\n&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(c == <span class=\"string\">&#x27;-&#x27;</span>)f = <span class=\"number\">-1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> v = c - <span class=\"string\">&#x27;0&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>((c = getchar()) != <span class=\"string\">&#x27; &#x27;</span> &amp;&amp; c != <span class=\"string\">&#x27;\\n&#x27;</span>)</span><br><span class=\"line\">        v = v * <span class=\"number\">10</span> + c - <span class=\"string\">&#x27;0&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> v * f;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">push_up</span><span class=\"params\">(<span class=\"keyword\">int</span> rt, <span class=\"keyword\">int</span> ch)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    p[rt].Min[<span class=\"number\">0</span>] = min(p[rt].Min[<span class=\"number\">0</span>], p[ch].Min[<span class=\"number\">0</span>]);</span><br><span class=\"line\">    p[rt].Min[<span class=\"number\">1</span>] = min(p[rt].Min[<span class=\"number\">1</span>], p[ch].Min[<span class=\"number\">1</span>]);</span><br><span class=\"line\">    p[rt].Max[<span class=\"number\">0</span>] = max(p[rt].Max[<span class=\"number\">0</span>], p[ch].Max[<span class=\"number\">0</span>]);</span><br><span class=\"line\">    p[rt].Max[<span class=\"number\">1</span>] = max(p[rt].Max[<span class=\"number\">1</span>], p[ch].Max[<span class=\"number\">1</span>]);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">build</span><span class=\"params\">(<span class=\"keyword\">int</span> l, <span class=\"keyword\">int</span> r, <span class=\"keyword\">int</span> o)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> mid = (l + r) &gt;&gt; <span class=\"number\">1</span>;</span><br><span class=\"line\">    d = o;</span><br><span class=\"line\">    nth_element(p+l, p+mid, p+r+<span class=\"number\">1</span>);</span><br><span class=\"line\">    p[mid].Min[<span class=\"number\">0</span>] = p[mid].Max[<span class=\"number\">0</span>] = p[mid].xy[<span class=\"number\">0</span>];</span><br><span class=\"line\">    p[mid].Min[<span class=\"number\">1</span>] = p[mid].Max[<span class=\"number\">1</span>] = p[mid].xy[<span class=\"number\">1</span>];</span><br><span class=\"line\">    p[mid].l = p[mid].r = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(l &lt; mid)p[mid].l = build(l, mid<span class=\"number\">-1</span>, o^<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(r &gt; mid)p[mid].r = build(mid+<span class=\"number\">1</span>, r, o^<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(p[mid].l)push_up(mid, p[mid].l);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(p[mid].r)push_up(mid, p[mid].r);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> mid;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">get_min</span><span class=\"params\">(node a)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> res = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(X &gt; a.Max[<span class=\"number\">0</span>])res += X - a.Max[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(X &lt; a.Min[<span class=\"number\">0</span>])res += a.Min[<span class=\"number\">0</span>] - X;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(Y &gt; a.Max[<span class=\"number\">1</span>])res += Y - a.Max[<span class=\"number\">1</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(Y &lt; a.Min[<span class=\"number\">1</span>])res += a.Min[<span class=\"number\">1</span>] - Y;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">query_min</span><span class=\"params\">(<span class=\"keyword\">int</span> rt)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> dis = <span class=\"built_in\">abs</span>(p[rt].xy[<span class=\"number\">0</span>] - X) + <span class=\"built_in\">abs</span>(p[rt].xy[<span class=\"number\">1</span>] - Y);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(dis)Min = min(Min, dis);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> lmin = inf,rmin = inf;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(p[rt].l)lmin = get_min(p[p[rt].l]);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(p[rt].r)rmin = get_min(p[p[rt].r]);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(lmin &lt; rmin)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(lmin &lt; Min)query_min(p[rt].l);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(rmin &lt; Min)query_min(p[rt].r);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(rmin &lt; Min)query_min(p[rt].r);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(lmin &lt; Min)query_min(p[rt].l);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">get_max</span><span class=\"params\">(node a)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> res = <span class=\"number\">0</span>;</span><br><span class=\"line\">    res += max(<span class=\"built_in\">abs</span>(a.Min[<span class=\"number\">0</span>]-X), <span class=\"built_in\">abs</span>(a.Max[<span class=\"number\">0</span>]-X));</span><br><span class=\"line\">    res += max(<span class=\"built_in\">abs</span>(a.Min[<span class=\"number\">1</span>]-Y), <span class=\"built_in\">abs</span>(a.Max[<span class=\"number\">1</span>]-Y));</span><br><span class=\"line\">    <span class=\"keyword\">return</span> res;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">query_max</span><span class=\"params\">(<span class=\"keyword\">int</span> rt)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> dis = <span class=\"built_in\">abs</span>(p[rt].xy[<span class=\"number\">0</span>] - X) + <span class=\"built_in\">abs</span>(p[rt].xy[<span class=\"number\">1</span>] - Y);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(dis)Max = max(Max, dis);</span><br><span class=\"line\">    <span class=\"keyword\">int</span> lmax = -inf,rmax = -inf;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(p[rt].l)lmax = get_max(p[p[rt].l]);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(p[rt].r)rmax = get_max(p[p[rt].r]);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(lmax &gt; rmax)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(lmax &gt; Max)query_max(p[rt].l);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(rmax &gt; Max)query_max(p[rt].r);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(rmax &gt; Max)query_max(p[rt].r);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(lmax &gt; Max)query_max(p[rt].l);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"> </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(~<span class=\"built_in\">scanf</span>(<span class=\"string\">&quot;%d&quot;</span>, &amp;n))</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; ++i)</span><br><span class=\"line\">            p[i].xy[<span class=\"number\">0</span>] = scan(),p[i].xy[<span class=\"number\">1</span>] = scan();</span><br><span class=\"line\">        root = build(<span class=\"number\">1</span>, n, <span class=\"number\">0</span>);</span><br><span class=\"line\">        <span class=\"keyword\">int</span> ans = inf;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt;= n; ++i)</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            X = p[i].xy[<span class=\"number\">0</span>],Y = p[i].xy[<span class=\"number\">1</span>];</span><br><span class=\"line\">            Min = inf,Max = -inf;</span><br><span class=\"line\">            query_min(root),query_max(root);</span><br><span class=\"line\">            ans = min(ans, Max - Min);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;%d\\n&quot;</span>, ans);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "ACM"
            ]
        }
    ]
}